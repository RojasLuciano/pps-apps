{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { auth } from \"../database/firebase\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport Spinner from \"react-native-loading-spinner-overlay/lib\";\nimport Modal from \"react-native-modal\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar LoginScreen = function LoginScreen() {\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      email = _React$useState2[0],\n      setEmail = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      password = _React$useState4[0],\n      setPassword = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      message = _React$useState6[0],\n      setMessage = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      loading = _React$useState8[0],\n      setLoading = _React$useState8[1];\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      isModalVisible = _React$useState10[0],\n      setModalVisible = _React$useState10[1];\n\n  var win = Dimensions.get('window');\n\n  var _React$useState11 = React.useState(''),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      chosenOption = _React$useState12[0],\n      setChosenOption = _React$useState12[1];\n\n  var toggleModal = function toggleModal() {\n    setModalVisible(!isModalVisible);\n  };\n\n  var navigation = useNavigation();\n\n  var startLoading = function startLoading() {\n    setLoading(true);\n    setTimeout(function () {\n      setLoading(false);\n    }, 3000);\n  };\n\n  var options = [{\n    label: 'Admin',\n    value: 'admin@gmail.com',\n    pass: 'admin123e'\n  }, {\n    label: 'Service',\n    value: 'service@gmail.com',\n    pass: 'service'\n  }, {\n    label: 'User',\n    value: 'user@gmail.com',\n    pass: 'user123'\n  }];\n\n  var isPortrait = function isPortrait() {\n    var dim = Dimensions.get('screen');\n    return dim.height >= dim.width;\n  };\n\n  var handlerLogin = function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(signInWithEmailAndPassword(auth, email, password).then(function (userCredential) {\n              var user = userCredential.user;\n              console.log(\"Logged in with\", user.email);\n            }).then(function () {\n              navigation.replace(\"Home\");\n            }).catch(function (error) {\n              switch (error.code) {\n                case \"auth/invalid-email\":\n                case \"auth/user-not-found\":\n                case \"auth/wrong-password\":\n                case \"auth/internal-error\":\n                case \"auth/too-many-requests\":\n                  toggleModal();\n                  setMessage(\"Credenciales inv√°lidas\");\n                  break;\n\n                default:\n                  setMessage(error.message);\n                  break;\n              }\n            }).finally(function () {\n              setLoading(false);\n            }));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var functionCombined = function functionCombined() {\n    handlerLogin();\n    startLoading();\n    setTimeout(function () {\n      setModalVisible(false);\n    }, 2000);\n  };\n\n  var onPressAdminHandler = function onPressAdminHandler() {\n    setEmail(\"admin@gmail.com\");\n    setPassword(\"admin123e\");\n  };\n\n  var onPressServiceHandler = function onPressServiceHandler() {\n    setEmail(\"service@gmail.com\");\n    setPassword(\"service\");\n  };\n\n  var onPressUserHandler = function onPressUserHandler() {\n    setEmail(\"user@gmail.com\");\n    setPassword(\"user123\");\n  };\n\n  var handlerSignUp = function handlerSignUp() {\n    navigation.replace(\"SignUp\");\n  };\n\n  function SetUsers(param) {\n    return _regeneratorRuntime.async(function SetUsers$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.t0 = param;\n            _context2.next = _context2.t0 === 'admin@gmail.com' ? 3 : _context2.t0 === 'service@gmail.com' ? 5 : _context2.t0 === 'user@gmail.com' ? 7 : 9;\n            break;\n\n          case 3:\n            onPressAdminHandler();\n            return _context2.abrupt(\"break\", 10);\n\n          case 5:\n            onPressServiceHandler();\n            return _context2.abrupt(\"break\", 10);\n\n          case 7:\n            onPressUserHandler();\n            return _context2.abrupt(\"break\", 10);\n\n          case 9:\n            return _context2.abrupt(\"break\", 10);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsx(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    style: {\n      flex: 1\n    },\n    children: _jsx(TouchableWithoutFeedback, {\n      onPress: Keyboard.dismiss,\n      children: _jsxs(View, {\n        style: {},\n        children: [_jsxs(Text, {\n          style: {\n            color: \"#128a90\",\n            fontSize: 90,\n            textAlign: \"center\",\n            marginTop: win.height * 0.1\n          },\n          children: [\"Bienvenido\", \"\\n\", _jsxs(Text, {\n            style: {\n              color: \"#128a90\",\n              fontSize: 30\n            },\n            children: [\"Por favor complete los datos para continuar \", \"\"]\n          })]\n        }), _jsx(TextInput, {\n          style: {\n            marginTop: win.height * 0.1,\n            color: \"#000000\",\n            backgroundColor: \"#dbece7\",\n            paddingVertical: 10,\n            paddingHorizontal: 20,\n            borderRadius: 20,\n            alignItems: \"center\",\n            height: 40,\n            marginBottom: 3,\n            borderColor: 'white',\n            borderWidth: 1\n          },\n          placeholder: \"Correo electr\\xF3nico\",\n          placeholderTextColor: \"#000000\",\n          onChangeText: function onChangeText(email) {\n            return setEmail(email);\n          },\n          value: email\n        }), _jsx(TextInput, {\n          style: {\n            position: \"relative\",\n            color: \"#000000\",\n            backgroundColor: \"#dbece7\",\n            paddingVertical: 10,\n            paddingHorizontal: 20,\n            borderRadius: 20,\n            alignItems: \"center\",\n            height: 40,\n            marginBottom: 3,\n            borderColor: 'white',\n            borderWidth: 1\n          },\n          placeholder: \"Contrase\\xF1a\",\n          placeholderTextColor: \"#000000\",\n          onChangeText: function onChangeText(password) {\n            return setPassword(password);\n          },\n          value: password,\n          secureTextEntry: true\n        }), loading && _jsx(View, {\n          style: styles.spinContainer,\n          children: _jsx(Spinner, {\n            visible: loading,\n            textStyle: styles.spinnerTextStyle\n          })\n        }), _jsx(View, {\n          children: !!isModalVisible ? _jsx(Modal, {\n            isVisible: isModalVisible,\n            children: _jsx(View, {\n              style: styles.modalContainer,\n              children: _jsx(Text, {\n                style: styles.modalText,\n                children: message\n              })\n            })\n          }) : null\n        }), _jsx(Text, {\n          style: {\n            color: \"#128a90\",\n            fontSize: 18,\n            textAlign: \"center\",\n            width: 90,\n            alignSelf: 'center',\n            paddingVertical: 4,\n            paddingHorizontal: -44,\n            textDecorationLine: 'underline'\n          },\n          onPress: functionCombined,\n          children: \"Ingresar\"\n        })]\n      })\n    })\n  });\n};\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  image: {\n    width: 70,\n    height: 70\n  },\n  message: {\n    width: 60,\n    height: 60,\n    alignSelf: \"center\"\n  },\n  imageText: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"#8871ff\",\n    textAlign: \"center\",\n    marginTop: 10,\n    marginBottom: 10\n  },\n  fabLocation: {\n    flex: 1,\n    position: \"absolute\",\n    bottom: -11\n  },\n  fabLocationBR: {\n    right: 20\n  },\n  fabLocationTL: {\n    left: 20,\n    borderRadius: 50,\n    backgroundColor: \"#ffffff\",\n    alignContent: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  fabLocationCenter: {\n    alignSelf: \"center\"\n  },\n  inner: {\n    padding: 24,\n    justifyContent: \"center\"\n  },\n  header: {\n    borderRadius: 20,\n    color: \"#000000\",\n    fontSize: 50,\n    textAlign: \"center\"\n  },\n  subtitle: {\n    color: \"#8871ff\",\n    fontSize: 15,\n    fontWeight: \"100\",\n    textAlign: \"center\",\n    borderRadius: 20\n  },\n  input: {},\n  btnContainer: {},\n  logo: {\n    flex: 1,\n    width: undefined,\n    height: undefined,\n    resizeMode: \"contain\"\n  },\n  ingresarText: {},\n  spinnerTextStyle: {\n    color: \"white\"\n  },\n  spinContainer: {\n    position: \"absolute\",\n    display: \"flex\",\n    backgroundColor: \"rgba(255, 0, 0, 0)\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    top: 0,\n    height: \"100%\",\n    width: \"100%\",\n    zIndex: 100\n  },\n  inputContainer: {\n    width: \"80%\",\n    marginTop: -70,\n    marginBottom: 10,\n    alignSelf: \"center\"\n  },\n  buttonError: {\n    backgroundColor: \"#b50404\",\n    width: \"100%\",\n    padding: 15,\n    borderRadius: 18,\n    alignItems: \"center\"\n  },\n  buttonText: {\n    color: \"#000000\",\n    fontWeight: \"700\",\n    fontSize: 16\n  },\n  modalContainer: {\n    backgroundColor: \"#b50404\",\n    flex: 1,\n    width: \"60%\",\n    height: \"10%\",\n    position: \"absolute\",\n    borderRadius: 10,\n    margin: \"auto\",\n    textAlign: \"center\",\n    alignSelf: \"center\"\n  },\n  modalText: {\n    color: \"white\",\n    fontWeight: \"500\",\n    fontSize: 15,\n    textAlign: \"center\",\n    marginTop: 25,\n    marginBottom: 10,\n    alignSelf: \"center\"\n  }\n});","map":{"version":3,"names":["useNavigation","React","auth","signInWithEmailAndPassword","Spinner","Modal","LoginScreen","useState","email","setEmail","password","setPassword","message","setMessage","loading","setLoading","isModalVisible","setModalVisible","win","Dimensions","get","chosenOption","setChosenOption","toggleModal","navigation","startLoading","setTimeout","options","label","value","pass","isPortrait","dim","height","width","handlerLogin","then","userCredential","user","console","log","replace","catch","error","code","finally","functionCombined","onPressAdminHandler","onPressServiceHandler","onPressUserHandler","handlerSignUp","SetUsers","param","Platform","OS","flex","Keyboard","dismiss","color","fontSize","textAlign","marginTop","backgroundColor","paddingVertical","paddingHorizontal","borderRadius","alignItems","marginBottom","borderColor","borderWidth","position","styles","spinContainer","spinnerTextStyle","modalContainer","modalText","alignSelf","textDecorationLine","StyleSheet","create","container","image","imageText","fontWeight","fabLocation","bottom","fabLocationBR","right","fabLocationTL","left","alignContent","justifyContent","fabLocationCenter","inner","padding","header","subtitle","input","btnContainer","logo","undefined","resizeMode","ingresarText","display","top","zIndex","inputContainer","buttonError","buttonText","margin"],"sources":["/Users/lucianorojas/Desktop/pps-final/alarma-de-robo/src/screens/LoginScreen.tsx"],"sourcesContent":["\r\nimport { useNavigation } from \"@react-navigation/core\";\r\nimport React from \"react\";\r\nimport {\r\n    View,\r\n    Text,\r\n    StyleSheet,\r\n    KeyboardAvoidingView,\r\n    TextInput,\r\n    TouchableOpacity,\r\n    Image,\r\n    Keyboard,\r\n    Platform,\r\n    TouchableWithoutFeedback,\r\n    ImageBackground,\r\n    Dimensions,\r\n} from \"react-native\";\r\nimport { auth } from \"../database/firebase\";\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { RootStackParamList } from \"../../App\";\r\nimport { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\r\nimport Spinner from \"react-native-loading-spinner-overlay/lib\";\r\nimport AppLoading from \"expo-app-loading\";\r\n\r\n\r\nimport Modal from \"react-native-modal\";\r\n\r\nconst LoginScreen = () => {\r\n    const [email, setEmail] = React.useState(\"\");\r\n    const [password, setPassword] = React.useState(\"\");\r\n    const [message, setMessage] = React.useState(\"\");\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [isModalVisible, setModalVisible] = React.useState(false);\r\n    const win = Dimensions.get('window');\r\n    const [chosenOption, setChosenOption] = React.useState('');\r\n\r\n\r\n\r\n    const toggleModal = () => {\r\n        setModalVisible(!isModalVisible);\r\n    };\r\n\r\n    const navigation = useNavigation<NativeStackNavigationProp<RootStackParamList>>();\r\n\r\n    const startLoading = () => {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 3000);\r\n    };\r\n\r\n    const options = [\r\n        { label: 'Admin', value: 'admin@gmail.com', pass: 'admin123e' },\r\n        { label: 'Service', value: 'service@gmail.com', pass: 'service' },\r\n        { label: 'User', value: 'user@gmail.com', pass: 'user123' },\r\n    ];\r\n\r\n\r\n    /**\r\n     * Returns true if the screen is in portrait mode\r\n     */\r\n    const isPortrait = () => {\r\n        const dim = Dimensions.get('screen');\r\n        return dim.height >= dim.width;\r\n    };\r\n\r\n\r\n    const handlerLogin = async () => {\r\n        setLoading(true);\r\n        await signInWithEmailAndPassword(auth, email, password)\r\n            .then((userCredential: { user: any }) => {\r\n                const user = userCredential.user;\r\n                console.log(\"Logged in with\", user.email);\r\n            })\r\n            .then(() => {\r\n                navigation.replace(\"Home\");\r\n            })\r\n            .catch((error) => {\r\n                switch (error.code) {\r\n                    case \"auth/invalid-email\":\r\n                    case \"auth/user-not-found\":\r\n                    case \"auth/wrong-password\":\r\n                    case \"auth/internal-error\":\r\n                    case \"auth/too-many-requests\":\r\n                        toggleModal();\r\n                        setMessage(\"Credenciales inv√°lidas\");\r\n                        break;\r\n                    default:\r\n                        setMessage(error.message);\r\n                        break;\r\n                }\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const functionCombined = () => {\r\n        handlerLogin();\r\n        startLoading();\r\n        setTimeout(() => {\r\n            setModalVisible(false);\r\n        }, 2000);\r\n    };\r\n\r\n    const onPressAdminHandler = () => {\r\n        setEmail(\"admin@gmail.com\");\r\n        setPassword(\"admin123e\");\r\n    };\r\n\r\n    const onPressServiceHandler = () => {\r\n        setEmail(\"service@gmail.com\");\r\n        setPassword(\"service\");\r\n    };\r\n\r\n    const onPressUserHandler = () => {\r\n        setEmail(\"user@gmail.com\");\r\n        setPassword(\"user123\");\r\n    };\r\n\r\n    const handlerSignUp = () => {\r\n        navigation.replace(\"SignUp\");\r\n    };\r\n\r\n\r\n    async function SetUsers( param: string     ) {\r\n        switch (param) {\r\n            case 'admin@gmail.com':\r\n                onPressAdminHandler();\r\n                break;\r\n            case 'service@gmail.com':\r\n                onPressServiceHandler();\r\n                break;\r\n            case 'user@gmail.com':\r\n                onPressUserHandler();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n\r\n\r\n\r\n        <KeyboardAvoidingView\r\n            behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n            style={{\r\n                flex: 1,\r\n            }}\r\n        >\r\n            <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n\r\n                <View style={{\r\n\r\n                }}>\r\n                    <Text style={{\r\n\r\n                        color: \"#128a90\",\r\n                        fontSize: 90,\r\n                \r\n                        textAlign: \"center\",\r\n                        marginTop: win.height * 0.1,\r\n                    }}>\r\n                        Bienvenido{\"\\n\"}\r\n                        <Text style={{\r\n                            color: \"#128a90\",\r\n                            fontSize: 30,\r\n                      \r\n                        }}>\r\n                            Por favor complete los datos para continuar {\"\"}\r\n\r\n                        </Text>\r\n                    </Text>\r\n\r\n                    <TextInput\r\n                        style={{\r\n                            marginTop: win.height * 0.1,\r\n                            color: \"#000000\",\r\n                            backgroundColor: \"#dbece7\",\r\n                            paddingVertical: 10,\r\n                            paddingHorizontal: 20,\r\n                            borderRadius: 20,\r\n                            alignItems: \"center\",\r\n                            height: 40,\r\n                            marginBottom: 3,\r\n\r\n                            borderColor: 'white',\r\n                            borderWidth: 1,\r\n                        }}\r\n                        placeholder=\"Correo electr√≥nico\"\r\n                        placeholderTextColor=\"#000000\"\r\n                        onChangeText={(email) => setEmail(email)}\r\n                        value={email}\r\n\r\n                    />\r\n\r\n                    <TextInput\r\n                        style={{\r\n                            position: \"relative\",\r\n                            color: \"#000000\",\r\n                            backgroundColor: \"#dbece7\",\r\n                            paddingVertical: 10,\r\n                            paddingHorizontal: 20,\r\n                            borderRadius: 20,\r\n                            alignItems: \"center\",\r\n                            height: 40,\r\n                            marginBottom: 3,\r\n\r\n                            borderColor: 'white',\r\n                            borderWidth: 1,\r\n                        }}\r\n                        placeholder=\"Contrase√±a\"\r\n                        placeholderTextColor=\"#000000\"\r\n                        onChangeText={(password) => setPassword(password)}\r\n                        value={password}\r\n                        secureTextEntry={true}\r\n                    />\r\n\r\n\r\n\r\n                    {loading && (\r\n                        <View style={styles.spinContainer}>\r\n                            <Spinner\r\n                                visible={loading}\r\n                                textStyle={styles.spinnerTextStyle}\r\n                            />\r\n                        </View>\r\n                    )}\r\n\r\n                    <View>\r\n                        {!!isModalVisible ? (\r\n                            <Modal isVisible={isModalVisible}>\r\n                                <View style={styles.modalContainer}>\r\n                                    <Text style={styles.modalText}>{message}</Text>\r\n                                </View>\r\n                            </Modal>\r\n                        ) : null}\r\n                    </View>\r\n\r\n                    <Text style={{\r\n                        color: \"#128a90\",\r\n                        fontSize: 18,\r\n                        textAlign: \"center\",\r\n                        width: 90,\r\n                        alignSelf: 'center',\r\n                        paddingVertical: 4,\r\n                        paddingHorizontal: -44,\r\n                        textDecorationLine: 'underline'\r\n                    }} onPress={functionCombined}>\r\n                        Ingresar\r\n                    </Text>\r\n\r\n   \r\n                </View>\r\n            </TouchableWithoutFeedback>\r\n        </KeyboardAvoidingView>\r\n\r\n\r\n    );\r\n};\r\nexport default LoginScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n    image: {\r\n\r\n        width: 70,\r\n        height: 70,\r\n\r\n    },\r\n    message: {\r\n        width: 60,\r\n        height: 60,\r\n        alignSelf: \"center\",\r\n    },\r\n    imageText: {\r\n        fontSize: 20,\r\n        fontWeight: \"bold\",\r\n        color: \"#8871ff\",\r\n        textAlign: \"center\",\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n\r\n    },\r\n    fabLocation: {\r\n        flex: 1,\r\n        position: \"absolute\",\r\n        bottom: -11,\r\n    },\r\n    fabLocationBR: {\r\n        right: 20,\r\n    },\r\n    fabLocationTL: {\r\n        left: 20,\r\n        borderRadius: 50,\r\n\r\n        backgroundColor: \"#ffffff\",\r\n        alignContent: \"center\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    fabLocationCenter: {\r\n        alignSelf: \"center\",\r\n    },\r\n    inner: {\r\n        padding: 24,\r\n\r\n        justifyContent: \"center\",\r\n\r\n    },\r\n    header: {\r\n        borderRadius: 20,\r\n        color: \"#000000\",\r\n    \r\n        fontSize: 50,\r\n        textAlign: \"center\",\r\n    },\r\n    subtitle: {\r\n        color: \"#8871ff\",\r\n        fontSize: 15,\r\n        fontWeight: \"100\",\r\n        textAlign: \"center\",\r\n        borderRadius: 20,\r\n    },\r\n    input: {\r\n\r\n\r\n\r\n\r\n\r\n\r\n    },\r\n    btnContainer: {\r\n    },\r\n    logo: {\r\n        flex: 1,\r\n        width: undefined,\r\n        height: undefined,\r\n        resizeMode: \"contain\",\r\n    },\r\n    ingresarText: {\r\n\r\n\r\n    },\r\n    spinnerTextStyle: {\r\n        color: \"white\",\r\n    },\r\n    spinContainer: {\r\n        position: \"absolute\",\r\n        display: \"flex\",\r\n        backgroundColor: \"rgba(255, 0, 0, 0)\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        top: 0,\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        zIndex: 100,\r\n    },\r\n    inputContainer: {\r\n        width: \"80%\",\r\n        marginTop: -70,\r\n        marginBottom: 10,\r\n        alignSelf: \"center\",\r\n    },\r\n    buttonError: {\r\n        backgroundColor: \"#b50404\",\r\n        width: \"100%\",\r\n        padding: 15,\r\n        borderRadius: 18,\r\n        alignItems: \"center\",\r\n    },\r\n    buttonText: {\r\n        color: \"#000000\",\r\n        fontWeight: \"700\",\r\n        fontSize: 16,\r\n    },\r\n    modalContainer: {\r\n        backgroundColor: \"#b50404\",\r\n        flex: 1,\r\n\r\n        width: \"60%\",\r\n        height: \"10%\",\r\n        position: \"absolute\",\r\n        borderRadius: 10,\r\n\r\n        margin: \"auto\",\r\n        textAlign: \"center\",\r\n        alignSelf: \"center\",\r\n    },\r\n    modalText: {\r\n        color: \"white\",\r\n        fontWeight: \"500\",\r\n        fontSize: 15,\r\n        textAlign: \"center\",\r\n        marginTop: 25,\r\n        marginBottom: 10,\r\n        alignSelf: \"center\",\r\n    },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}