{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { auth } from \"../database/firebase\";\nimport Spinner from \"react-native-loading-spinner-overlay/lib\";\nimport Modal from \"react-native-modal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LoginScreen = function LoginScreen() {\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      email = _React$useState2[0],\n      setEmail = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      password = _React$useState4[0],\n      setPassword = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      message = _React$useState6[0],\n      setMessage = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      loading = _React$useState8[0],\n      setLoading = _React$useState8[1];\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      isModalVisible = _React$useState10[0],\n      setModalVisible = _React$useState10[1];\n\n  var win = Dimensions.get('window');\n\n  var _React$useState11 = React.useState(''),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      chosenOption = _React$useState12[0],\n      setChosenOption = _React$useState12[1];\n\n  var toggleModal = function toggleModal() {\n    setModalVisible(!isModalVisible);\n  };\n\n  var navigation = useNavigation();\n\n  var startLoading = function startLoading() {\n    setLoading(true);\n    setTimeout(function () {\n      setLoading(false);\n    }, 3000);\n  };\n\n  var options = [{\n    label: 'Admin',\n    value: 'admin@gmail.com',\n    pass: 'admin123e'\n  }, {\n    label: 'Service',\n    value: 'service@gmail.com',\n    pass: 'service'\n  }, {\n    label: 'User',\n    value: 'user@gmail.com',\n    pass: 'user123'\n  }];\n\n  var isPortrait = function isPortrait() {\n    var dim = Dimensions.get('screen');\n    return dim.height >= dim.width;\n  };\n\n  var handlerLogin = function handlerLogin() {\n    return _regeneratorRuntime.async(function handlerLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(auth.signInWithEmailAndPassword(email, password).then(function (userCredential) {\n              var user = userCredential.user;\n              console.log(\"Logged in with\", user.email);\n            }).then(function () {\n              navigation.replace(\"Home\");\n            }).catch(function (error) {\n              switch (error.code) {\n                case \"auth/invalid-email\":\n                case \"auth/user-not-found\":\n                case \"auth/wrong-password\":\n                case \"auth/internal-error\":\n                case \"auth/too-many-requests\":\n                  toggleModal();\n                  setMessage(\"Credenciales inv√°lidas\");\n                  break;\n\n                default:\n                  setMessage(error.message);\n                  break;\n              }\n            }).finally(function () {\n              setLoading(false);\n            }));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var functionCombined = function functionCombined() {\n    handlerLogin();\n    startLoading();\n    setTimeout(function () {\n      setModalVisible(false);\n    }, 2000);\n  };\n\n  var onPressAdminHandler = function onPressAdminHandler() {\n    setEmail(\"admin@gmail.com\");\n    setPassword(\"admin123e\");\n  };\n\n  var onPressServiceHandler = function onPressServiceHandler() {\n    setEmail(\"service@gmail.com\");\n    setPassword(\"service\");\n  };\n\n  var onPressUserHandler = function onPressUserHandler() {\n    setEmail(\"user@gmail.com\");\n    setPassword(\"user123\");\n  };\n\n  var handlerSignUp = function handlerSignUp() {\n    navigation.replace(\"SignUp\");\n  };\n\n  function SetUsers(param) {\n    return _regeneratorRuntime.async(function SetUsers$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.t0 = param;\n            _context2.next = _context2.t0 === 'admin@gmail.com' ? 3 : _context2.t0 === 'service@gmail.com' ? 5 : _context2.t0 === 'user@gmail.com' ? 7 : 9;\n            break;\n\n          case 3:\n            onPressAdminHandler();\n            return _context2.abrupt(\"break\", 10);\n\n          case 5:\n            onPressServiceHandler();\n            return _context2.abrupt(\"break\", 10);\n\n          case 7:\n            onPressUserHandler();\n            return _context2.abrupt(\"break\", 10);\n\n          case 9:\n            return _context2.abrupt(\"break\", 10);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsx(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    style: styles.container,\n    children: _jsx(TouchableWithoutFeedback, {\n      onPress: Keyboard.dismiss,\n      children: _jsxs(View, {\n        style: styles.inner,\n        children: [_jsxs(Text, {\n          style: styles.header,\n          children: [\"Bienvenido\", \"\\n\", _jsx(Text, {\n            style: styles.subtitle,\n            children: \"Por favor complete los datos para continuar\"\n          })]\n        }), _jsx(TextInput, {\n          placeholder: \"Correo electr\\xF3nico\",\n          placeholderTextColor: \"#fefeff\",\n          value: email,\n          onChangeText: function onChangeText(text) {\n            return setEmail(text);\n          },\n          style: styles.input,\n          clearButtonMode: \"always\"\n        }), _jsx(TextInput, {\n          placeholder: \"Contrase\\xF1a\",\n          placeholderTextColor: \"#fefeff\",\n          value: password,\n          onChangeText: function onChangeText(text) {\n            return setPassword(text);\n          },\n          style: styles.input,\n          secureTextEntry: true\n        }), _jsxs(View, {\n          children: [loading && _jsx(View, {\n            style: styles.spinContainer,\n            children: _jsx(Spinner, {\n              visible: loading,\n              textStyle: styles.spinnerTextStyle\n            })\n          }), _jsx(View, {\n            children: !!isModalVisible ? _jsx(Modal, {\n              isVisible: isModalVisible,\n              children: _jsx(View, {\n                style: styles.modalContainer,\n                children: _jsx(Text, {\n                  style: styles.modalText,\n                  children: message\n                })\n              })\n            }) : null\n          }), _jsx(Text, {\n            style: styles.ingresarText,\n            onPress: functionCombined,\n            children: \"Ingresar\"\n          }), _jsxs(View, {\n            style: {\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            },\n            children: [_jsxs(Text, {\n              style: {\n                color: \"#00060b\"\n              },\n              children: [\"No tiene una cuenta?\", \" \"]\n            }), _jsx(TouchableOpacity, {\n              onPress: handlerSignUp,\n              children: _jsxs(Text, {\n                style: {\n                  color: \"#fddc65\",\n                  justifyContent: \"flex-end\"\n                },\n                children: [\" \", \"Reg\\xEDstrese\"]\n              })\n            })]\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: [styles.fabLocation, styles.fabLocationCenter],\n          onPress: onPressAdminHandler,\n          activeOpacity: 0.5,\n          children: [_jsx(Image, {\n            style: styles.image,\n            source: require(\"../utils/img/user2.png\")\n          }), _jsx(View, {\n            children: _jsx(Text, {\n              style: styles.imageText,\n              children: \"Admin\"\n            })\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: [styles.fabLocation, styles.fabLocationTL],\n          onPress: onPressServiceHandler,\n          activeOpacity: 0.5,\n          children: [_jsx(Image, {\n            style: styles.image,\n            source: require(\"../utils/img/user3.png\")\n          }), _jsx(View, {\n            children: _jsx(Text, {\n              style: styles.imageText,\n              children: \"Service\"\n            })\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: [styles.fabLocation, styles.fabLocationBR],\n          onPress: onPressUserHandler,\n          activeOpacity: 0.5,\n          children: [_jsx(Image, {\n            style: styles.image,\n            source: require(\"../utils/img/user4.png\")\n          }), _jsx(View, {\n            children: _jsx(Text, {\n              style: styles.imageText,\n              children: \"User\"\n            })\n          })]\n        })]\n      })\n    })\n  });\n};\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  image: {\n    width: 77,\n    height: 90\n  },\n  imageText: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"#00060b\",\n    textAlign: \"center\",\n    marginTop: -3,\n    marginBottom: 10\n  },\n  fabLocation: {\n    position: \"absolute\",\n    bottom: -11\n  },\n  fabLocationBR: {\n    right: 20\n  },\n  fabLocationTL: {\n    left: 20\n  },\n  fabLocationCenter: {\n    alignSelf: \"center\"\n  },\n  inner: {\n    padding: 24,\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  header: {\n    fontSize: 50,\n    fontWeight: \"bold\",\n    color: \"#00060b\",\n    textAlign: \"center\",\n    marginBottom: 20,\n    borderRadius: 50,\n    padding: 10\n  },\n  subtitle: {\n    fontWeight: \"bold\",\n    color: \"#00060b\",\n    fontSize: 15,\n    textAlign: \"center\"\n  },\n  input: {\n    color: \"white\",\n    borderBottomColor: \"#000000\",\n    borderBottomWidth: 1,\n    marginBottom: 10,\n    padding: 10,\n    fontSize: 18,\n    fontWeight: \"100\"\n  },\n  btnContainer: {\n    color: \"#000000\",\n    fontWeight: \"700\",\n    fontSize: 16\n  },\n  logo: {\n    flex: 1,\n    width: undefined,\n    height: undefined,\n    resizeMode: \"contain\"\n  },\n  ingresarText: {\n    color: \"#00060b\",\n    fontSize: 18,\n    textAlign: \"center\",\n    marginTop: 10,\n    marginBottom: 10,\n    textDecorationLine: \"underline\"\n  },\n  spinnerTextStyle: {\n    color: \"white\"\n  },\n  spinContainer: {\n    position: \"absolute\",\n    display: \"flex\",\n    backgroundColor: \"rgba(255, 0, 0, 0)\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    top: 0,\n    height: \"100%\",\n    width: \"100%\",\n    zIndex: 100\n  },\n  inputContainer: {\n    width: \"80%\",\n    marginTop: -70,\n    marginBottom: 10,\n    alignSelf: \"center\"\n  },\n  buttonError: {\n    backgroundColor: \"#b50404\",\n    width: \"100%\",\n    padding: 15,\n    borderRadius: 18,\n    alignItems: \"center\"\n  },\n  buttonText: {\n    color: \"#000000\",\n    fontWeight: \"700\",\n    fontSize: 16\n  },\n  modalContainer: {\n    backgroundColor: \"#b50404\",\n    flex: 1,\n    width: \"60%\",\n    height: \"10%\",\n    position: \"absolute\",\n    borderRadius: 10,\n    margin: \"auto\",\n    textAlign: \"center\",\n    alignSelf: \"center\"\n  },\n  modalText: {\n    color: \"white\",\n    fontWeight: \"500\",\n    fontSize: 15,\n    textAlign: \"center\",\n    marginTop: 25,\n    marginBottom: 10,\n    alignSelf: \"center\"\n  }\n});","map":{"version":3,"names":["useNavigation","React","auth","Spinner","Modal","LoginScreen","useState","email","setEmail","password","setPassword","message","setMessage","loading","setLoading","isModalVisible","setModalVisible","win","Dimensions","get","chosenOption","setChosenOption","toggleModal","navigation","startLoading","setTimeout","options","label","value","pass","isPortrait","dim","height","width","handlerLogin","signInWithEmailAndPassword","then","userCredential","user","console","log","replace","catch","error","code","finally","functionCombined","onPressAdminHandler","onPressServiceHandler","onPressUserHandler","handlerSignUp","SetUsers","param","Platform","OS","styles","container","Keyboard","dismiss","inner","header","subtitle","text","input","spinContainer","spinnerTextStyle","modalContainer","modalText","ingresarText","flexDirection","justifyContent","alignItems","color","fabLocation","fabLocationCenter","image","require","imageText","fabLocationTL","fabLocationBR","StyleSheet","create","flex","fontSize","fontWeight","textAlign","marginTop","marginBottom","position","bottom","right","left","alignSelf","padding","borderRadius","borderBottomColor","borderBottomWidth","btnContainer","logo","undefined","resizeMode","textDecorationLine","display","backgroundColor","top","zIndex","inputContainer","buttonError","buttonText","margin"],"sources":["/Users/lucianorojas/Desktop/pps-final/alarma-de-robo/src/screens/LoginScreen.tsx"],"sourcesContent":["\nimport { useNavigation } from \"@react-navigation/core\";\nimport React from \"react\";\nimport {\n    View,\n    Text,\n    StyleSheet,\n    KeyboardAvoidingView,\n    TextInput,\n    TouchableOpacity,\n    Image,\n    Keyboard,\n    Platform,\n    TouchableWithoutFeedback,\n    ImageBackground,\n    Dimensions,\n} from \"react-native\";\nimport { auth } from \"../database/firebase\";\n\nimport { RootStackParamList } from \"../../App\";\nimport { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\nimport Spinner from \"react-native-loading-spinner-overlay/lib\";\nimport AppLoading from \"expo-app-loading\";\n\n\nimport Modal from \"react-native-modal\";\n\nconst LoginScreen = () => {\n    const [email, setEmail] = React.useState(\"\");\n    const [password, setPassword] = React.useState(\"\");\n    const [message, setMessage] = React.useState(\"\");\n    const [loading, setLoading] = React.useState(false);\n    const [isModalVisible, setModalVisible] = React.useState(false);\n    const win = Dimensions.get('window');\n    const [chosenOption, setChosenOption] = React.useState('');\n\n\n\n    const toggleModal = () => {\n        setModalVisible(!isModalVisible);\n    };\n\n    const navigation = useNavigation<NativeStackNavigationProp<RootStackParamList>>();\n\n    const startLoading = () => {\n        setLoading(true);\n        setTimeout(() => {\n            setLoading(false);\n        }, 3000);\n    };\n\n    const options = [\n        { label: 'Admin', value: 'admin@gmail.com', pass: 'admin123e' },\n        { label: 'Service', value: 'service@gmail.com', pass: 'service' },\n        { label: 'User', value: 'user@gmail.com', pass: 'user123' },\n    ];\n\n\n    /**\n     * Returns true if the screen is in portrait mode\n     */\n    const isPortrait = () => {\n        const dim = Dimensions.get('screen');\n        return dim.height >= dim.width;\n    };\n\n\n    const handlerLogin = async () => {\n        setLoading(true);\n        await auth.signInWithEmailAndPassword(email, password)\n            .then((userCredential: { user: any }) => {\n                const user = userCredential.user;\n                console.log(\"Logged in with\", user.email);\n            })\n            .then(() => {\n                navigation.replace(\"Home\");\n            })\n            .catch((error) => {\n                switch (error.code) {\n                    case \"auth/invalid-email\":\n                    case \"auth/user-not-found\":\n                    case \"auth/wrong-password\":\n                    case \"auth/internal-error\":\n                    case \"auth/too-many-requests\":\n                        toggleModal();\n                        setMessage(\"Credenciales inv√°lidas\");\n                        break;\n                    default:\n                        setMessage(error.message);\n                        break;\n                }\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    };\n\n    const functionCombined = () => {\n        handlerLogin();\n        startLoading();\n        setTimeout(() => {\n            setModalVisible(false);\n        }, 2000);\n    };\n\n    const onPressAdminHandler = () => {\n        setEmail(\"admin@gmail.com\");\n        setPassword(\"admin123e\");\n    };\n\n    const onPressServiceHandler = () => {\n        setEmail(\"service@gmail.com\");\n        setPassword(\"service\");\n    };\n\n    const onPressUserHandler = () => {\n        setEmail(\"user@gmail.com\");\n        setPassword(\"user123\");\n    };\n\n    const handlerSignUp = () => {\n        navigation.replace(\"SignUp\");\n    };\n\n\n    async function SetUsers( param: string     ) {\n        switch (param) {\n            case 'admin@gmail.com':\n                onPressAdminHandler();\n                break;\n            case 'service@gmail.com':\n                onPressServiceHandler();\n                break;\n            case 'user@gmail.com':\n                onPressUserHandler();\n                break;\n            default:\n                break;\n        }\n    }\n\n\n    return (\n        <KeyboardAvoidingView\n          behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n          style={styles.container}\n        >\n\n            <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n              <View style={styles.inner}>\n                <Text style={styles.header}>\n                  Bienvenido{\"\\n\"}\n                  <Text style={styles.subtitle}>\n                    Por favor complete los datos para continuar \n                  </Text>\n                </Text>\n    \n                <TextInput\n                  placeholder=\"Correo electr√≥nico\"\n                  placeholderTextColor={\"#fefeff\"}\n                  value={email}\n                  onChangeText={(text) => setEmail(text)}\n                  style={styles.input}\n                  clearButtonMode=\"always\"\n                />\n                <TextInput\n                  placeholder=\"Contrase√±a\"\n                  placeholderTextColor={\"#fefeff\"}\n                  value={password}\n                  onChangeText={(text) => setPassword(text)}\n                  style={styles.input}\n                  secureTextEntry={true}\n                />\n    \n                <View>\n                  {loading && (\n                    <View style={styles.spinContainer}>\n                      <Spinner\n                        visible={loading}\n                        textStyle={styles.spinnerTextStyle}\n                      />\n                    </View>\n                  )}\n    \n                  <View>\n                    {!!isModalVisible ? (\n                      <Modal isVisible={isModalVisible}>\n                        <View style={styles.modalContainer}>\n                          <Text style={styles.modalText}>{message}</Text>\n                        </View>\n                      </Modal>\n                    ) : null}\n                  </View>\n    \n                  <Text style={styles.ingresarText} onPress={functionCombined}>\n                    Ingresar\n                  </Text>\n    \n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Text style={{ color: \"#00060b\",  }}>\n                      No tiene una cuenta?{\" \"}\n                    </Text>\n                    <TouchableOpacity onPress={handlerSignUp}>\n                      <Text\n                        style={{\n                        \n                          color: \"#fddc65\",\n                          justifyContent: \"flex-end\",\n                        }}\n                      >\n                        {\" \"}\n                        Reg√≠strese\n                      </Text>\n                    </TouchableOpacity>\n                  </View>\n                </View>\n    \n                <TouchableOpacity\n                  style={[styles.fabLocation, styles.fabLocationCenter]}\n                  onPress={onPressAdminHandler}\n                  activeOpacity={0.5}\n                >\n                  <Image\n                    style={styles.image}\n                    source={require(\"../utils/img/user2.png\")}\n                  />\n                  <View>\n                    <Text style={styles.imageText}>Admin</Text>\n                  </View>\n                </TouchableOpacity>\n    \n                <TouchableOpacity\n                  style={[styles.fabLocation, styles.fabLocationTL]}\n                  onPress={onPressServiceHandler}\n                  activeOpacity={0.5}\n                >\n                  <Image\n                    style={styles.image}\n                    source={require(\"../utils/img/user3.png\")}\n                  />\n                  <View>\n                    <Text style={styles.imageText}>Service</Text>\n                  </View>\n                </TouchableOpacity>\n    \n                <TouchableOpacity\n                  style={[styles.fabLocation, styles.fabLocationBR]}\n                  onPress={onPressUserHandler}\n                  activeOpacity={0.5}\n                >\n                  <Image\n                    style={styles.image}\n                    source={require(\"../utils/img/user4.png\")}\n                  />\n                  <View>\n                    <Text style={styles.imageText}>User</Text>\n                  </View>\n                </TouchableOpacity>\n              </View>\n            </TouchableWithoutFeedback>\n        </KeyboardAvoidingView>\n      );\n    };\n    \n    export default LoginScreen;\n    const styles = StyleSheet.create({\n      container: {\n        flex: 1,\n      },\n      image: {\n        width: 77,\n        height: 90,\n      },\n      imageText: {\n        fontSize: 20,\n        fontWeight: \"bold\",\n        color: \"#00060b\",\n        textAlign: \"center\",\n        marginTop: -3,\n        marginBottom: 10,\n      },\n      fabLocation: {\n        position: \"absolute\",\n        bottom: -11,\n      },\n      fabLocationBR: {\n        right: 20,\n      },\n      fabLocationTL: {\n        left: 20,\n      },\n      fabLocationCenter: {\n        alignSelf: \"center\",\n      },\n      inner: {\n        padding: 24,\n        flex: 1,\n        justifyContent: \"center\",\n      },\n      header: {\n    \n        fontSize: 50,\n        fontWeight: \"bold\",\n        color: \"#00060b\",\n        textAlign: \"center\",\n        marginBottom: 20,\n    \n        borderRadius: 50,\n        padding : 10,\n      },\n      subtitle: {\n        fontWeight: \"bold\",\n        color: \"#00060b\",\n        fontSize: 15,\n        textAlign: \"center\",\n      },\n      input: {\n       \n        color: \"white\",\n        borderBottomColor: \"#000000\",\n        borderBottomWidth: 1,\n        marginBottom: 10,\n        padding: 10,\n        fontSize: 18,\n        fontWeight: \"100\",\n      },\n      btnContainer: {\n        color: \"#000000\",\n        fontWeight: \"700\",\n        fontSize: 16,\n      },\n      logo: {\n        flex: 1,\n        width: undefined,\n        height: undefined,\n        resizeMode: \"contain\",\n      },\n      ingresarText: {\n        \n        color: \"#00060b\",\n        fontSize: 18,\n        textAlign: \"center\",\n        marginTop: 10,\n        marginBottom: 10,\n        textDecorationLine: \"underline\",\n      },\n      spinnerTextStyle: {\n        color: \"white\",\n      },\n      spinContainer: {\n        position: \"absolute\",\n        display: \"flex\",\n        backgroundColor: \"rgba(255, 0, 0, 0)\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        top: 0,\n        height: \"100%\",\n        width: \"100%\",\n        zIndex: 100,\n      },\n      inputContainer: {\n        width: \"80%\",\n        marginTop: -70,\n        marginBottom: 10,\n        alignSelf: \"center\",\n      },\n      buttonError: {\n        backgroundColor: \"#b50404\",\n        width: \"100%\",\n        padding: 15,\n        borderRadius: 18,\n        alignItems: \"center\",\n      },\n      buttonText: {\n        color: \"#000000\",\n        fontWeight: \"700\",\n        fontSize: 16,\n      },\n      modalContainer: {\n        backgroundColor: \"#b50404\",\n        flex: 1,\n    \n        width: \"60%\",\n        height: \"10%\",\n        position: \"absolute\",\n        borderRadius: 10,\n    \n        margin: \"auto\",\n        textAlign: \"center\",\n        alignSelf: \"center\",\n      },\n      modalText: {\n        color: \"white\",\n        fontWeight: \"500\",\n        fontSize: 15,\n        textAlign: \"center\",\n        marginTop: 25,\n        marginBottom: 10,\n        alignSelf: \"center\",\n      },\n    });"],"mappings":"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"},"metadata":{},"sourceType":"module"}